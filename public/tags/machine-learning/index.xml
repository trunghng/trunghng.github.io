<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>machine-learning on Littleroot</title>
    <link>https://trunghng.github.io/tags/machine-learning/</link>
    <description>Recent content in machine-learning on Littleroot</description>
    <image>
      <title>Littleroot</title>
      <url>https://trunghng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://trunghng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Apr 2024 16:28:52 +0700</lastBuildDate><atom:link href="https://trunghng.github.io/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Variational Autoencoder</title>
      <link>https://trunghng.github.io/posts/machine-learning/vae/</link>
      <pubDate>Tue, 30 Apr 2024 16:28:52 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/vae/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;An autoencoder that differs from others (with deterministic encoder) by mapping each input $\mathbf{x}$ to a distribution over the possible values of the latent representation $\mathbf{z}$ from which $\mathbf{x}$ could have been generated.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Graph Representation Learning</title>
      <link>https://trunghng.github.io/posts/machine-learning/graph-representation-learning/</link>
      <pubDate>Tue, 16 Apr 2024 14:43:59 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/graph-representation-learning/</guid>
      <description>Traditional feature-based approaches In traditional Machine Learning methods, we first represent our data points (nodes, links, entire graphs) as vectors of (hand-designed) features and then train a classical ML model (random forest, SVM, neural network) on top of that.
Let us consider a network $\mathcal{G}=(\mathcal{V},\mathcal{E})$, where $\mathcal{V}$ is the set of nodes and $\mathcal{E}$ is the set of edges between these nodes. Also let $\mathbf{A}\in\mathbb{R}^{\vert\mathcal{V}\vert\times\vert\mathcal{V}\vert}$ be the adjacency matrix of $\mathcal{G}$, i.</description>
    </item>
    
    <item>
      <title>GAN</title>
      <link>https://trunghng.github.io/posts/machine-learning/gan/</link>
      <pubDate>Mon, 01 May 2023 13:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/gan/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Generative Adversarial Networks.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Read-through: Probabilistic Graphical Models - Learning</title>
      <link>https://trunghng.github.io/posts/machine-learning/pgm-learning/</link>
      <pubDate>Sun, 19 Feb 2023 17:23:56 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/pgm-learning/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Learning in PGMs.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Read-through: Probabilistic Graphical Models - Inference</title>
      <link>https://trunghng.github.io/posts/machine-learning/pgm-inference/</link>
      <pubDate>Thu, 02 Feb 2023 15:51:13 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/pgm-inference/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Inference in PGMs.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Categorical Reparameterization with Gumbel-Softmax &amp; Concrete Distribution</title>
      <link>https://trunghng.github.io/posts/machine-learning/cat-reparam-gumbel-softmax-concrete-dist/</link>
      <pubDate>Mon, 02 Jan 2023 13:49:15 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/cat-reparam-gumbel-softmax-concrete-dist/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on using Gumbel-Softmax &amp;amp; Concrete Distribution in Categorical sampling&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Read-through: Probabilistic Graphical Models - Representation</title>
      <link>https://trunghng.github.io/posts/machine-learning/pgm-representation/</link>
      <pubDate>Sat, 10 Dec 2022 17:55:57 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/pgm-representation/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Representation in PGMs.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Natural Evolution Strategies</title>
      <link>https://trunghng.github.io/posts/evolution-strategy/nes/</link>
      <pubDate>Fri, 07 Oct 2022 13:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/evolution-strategy/nes/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Natural Evolution Strategies&lt;/strong&gt;, or &lt;strong&gt;NES&lt;/strong&gt;, are referred to a family of evolution strategies that throughout its generations update a search distribution repeatedly using an estimated gradient of its distribution parameters.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>CMA Evolution Strategy</title>
      <link>https://trunghng.github.io/posts/evolution-strategy/cma-es/</link>
      <pubDate>Wed, 14 Sep 2022 13:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/evolution-strategy/cma-es/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on CMA - Evolution Strategy.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Linear Models</title>
      <link>https://trunghng.github.io/posts/machine-learning/glm/</link>
      <pubDate>Sat, 13 Aug 2022 13:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/glm/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on using linear models in regression and classification.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>The Exponential Family, Generalized Linear Models</title>
      <link>https://trunghng.github.io/posts/machine-learning/exponential-family-glim/</link>
      <pubDate>Mon, 04 Apr 2022 14:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/machine-learning/exponential-family-glim/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Exponential Family &amp;amp; Generalized Linear Models.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
