<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>actor-critic on Littleroot</title>
    <link>https://trunghng.github.io/tags/actor-critic/</link>
    <description>Recent content in actor-critic on Littleroot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 25 May 2023 15:25:54 +0700</lastBuildDate><atom:link href="https://trunghng.github.io/tags/actor-critic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi-agent Deep Deterministic Policy Gradient</title>
      <link>https://trunghng.github.io/posts/reinforcement-learning/maddpg/</link>
      <pubDate>Thu, 25 May 2023 15:25:54 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/reinforcement-learning/maddpg/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on MADDPG.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Maximum Entropy Reinforcement Learning via Soft Q-learning &amp; Soft Actor-Critic</title>
      <link>https://trunghng.github.io/posts/reinforcement-learning/maxent-sql-sac/</link>
      <pubDate>Tue, 27 Dec 2022 13:46:09 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/reinforcement-learning/maxent-sql-sac/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Notes on Entropy-Regularized Reinforcement Learning via SQL &amp;amp; SAC&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Deterministic Policy Gradients</title>
      <link>https://trunghng.github.io/posts/reinforcement-learning/deterministic-policy-gradients/</link>
      <pubDate>Fri, 02 Dec 2022 19:26:44 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/reinforcement-learning/deterministic-policy-gradients/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The generalization of policy gradient theorems into deterministic case and corresponding policy gradient algorithms.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Policy Gradient Theorem</title>
      <link>https://trunghng.github.io/posts/reinforcement-learning/policy-gradient-theorem/</link>
      <pubDate>Wed, 04 May 2022 14:00:00 +0700</pubDate>
      
      <guid>https://trunghng.github.io/posts/reinforcement-learning/policy-gradient-theorem/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;So far in the series, we have been choosing the actions based on the estimated action value function. On the other hand, we can instead learn a &lt;strong&gt;parameterized policy&lt;/strong&gt;, $\boldsymbol{\theta}$, that can select actions without consulting a value function by updating $\boldsymbol{\theta}$ on each step in the direction of an estimate of the gradient of some performance measure w.r.t $\boldsymbol{\theta}$. Such methods are called &lt;strong&gt;policy gradient methods&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
